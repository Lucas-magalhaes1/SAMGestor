// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SAMGestor.Notification.Infrastructure.Persistence;

#nullable disable

namespace SAMGestor.Notification.Infrastructure.Migrations
{
    [DbContext(typeof(NotificationDbContext))]
    [Migration("20250817223600_Init_Notification")]
    partial class Init_Notification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("notification")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SAMGestor.Notification.Domain.Entities.NotificationDispatchLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Error")
                        .HasColumnType("text");

                    b.Property<Guid>("NotificationMessageId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NotificationMessageId")
                        .HasDatabaseName("ix_dispatch_message");

                    b.ToTable("notification_dispatch_logs", "notification");
                });

            modelBuilder.Entity("SAMGestor.Notification.Domain.Entities.NotificationMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Attempts")
                        .HasColumnType("integer");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<int>("Channel")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExternalCorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastError")
                        .HasColumnType("text");

                    b.Property<string>("RecipientEmail")
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)");

                    b.Property<string>("RecipientName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RecipientPhone")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<Guid?>("RegistrationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RetreatId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("TemplateKey")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalCorrelationId")
                        .HasDatabaseName("ix_notification_extcorr");

                    b.HasIndex("RegistrationId")
                        .HasDatabaseName("ix_notification_registration");

                    b.HasIndex("RetreatId")
                        .HasDatabaseName("ix_notification_retreat");

                    b.ToTable("notification_messages", "notification");
                });

            modelBuilder.Entity("SAMGestor.Notification.Domain.Entities.NotificationDispatchLog", b =>
                {
                    b.HasOne("SAMGestor.Notification.Domain.Entities.NotificationMessage", null)
                        .WithMany("DispatchLogs")
                        .HasForeignKey("NotificationMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAMGestor.Notification.Domain.Entities.NotificationMessage", b =>
                {
                    b.Navigation("DispatchLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
